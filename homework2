import numpy
table = numpy.array([[ 5. ,  1.3,  8.3,  9. ],
                  [ 9.1,  8.2,  3.3,  5.3]])

#centre of mass

def com(xyz, mass):
    mass = mass.reshape((-1, 1))
    return (xyz * mass).mean(0)

print(com(table[:, :3], table[:, 3]))

#euclidean

a = numpy.array([[ 5. ,  1.3,  8.3,  9. ]])
b = numpy.array([[ 9.1,  8.2,  3.3,  5.3]])

distance = numpy.sqrt(numpy.sum((a-b)**2))

# also may be

import math

x = [ 5. ,  1.3,  8.3,  9. ]
y = [ 9.1,  8.2,  3.3,  5.3]

dist = math.sqrt(sum([(xi-yi)**2 for xi,yi in zip(x, y)]))
 
#SciPy defines distances between sets of points 

import numpy
from scipy.spatial.distance import pdist, squareform
x = numpy.array([[ 5. ,  1.3,  8.3,  9. ],
                  [ 9.1,  8.2,  3.3,  5.3]])
print(x)
d = squareform(pdist(x, 'euclidean'))
print(d)

#also scipy.spatial.distance.cdist gives the distance between all pairs for two points
